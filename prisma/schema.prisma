// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  roleId      String  @id
  title       String  @unique
  scale       Int
  permissions String? @db.VarChar(500)
  createdAt   BigInt
  updatedAt   BigInt
  user        Users[]
  isDeleted   Boolean @default(false)
}

model Users {
  userId       String  @id
  fName        String
  lName        String?
  userName     String  @unique
  password     String
  fatherName   String?
  joiningDate  BigInt
  nic          String
  isLoggedIn   Boolean @default(false)
  isCheckedIn  Boolean @default(false)
  role         Roles?  @relation(fields: [roleId], references: [roleId])
  roleId       String?
  emailOffice  String?
  address      String?
  phone        Int?
  profileImage String?
  designation  String?
  updatedAt    BigInt
  createdAt    BigInt
  isDeleted    Boolean @default(false)

  attendence Attendence[]
  Reports    Reports[]
  tasks      TaskTracks[]

  teamLeadId  String?
  successor   Users?   @relation("TeamLead", fields: [teamLeadId], references: [userId])
  predecessor Users[]  @relation("TeamLead")
  Session     Session?
}

model Attendence {
  attendenceId   String  @id
  attendenceDate BigInt
  checkInTime    BigInt
  checkOutTime   BigInt?
  user           Users   @relation(fields: [userId], references: [userId])
  userId         String
  updatedAt      BigInt
  createdAt      BigInt
  isDeleted      Boolean @default(false)
}

model Session {
  sessionId      String   @id
  user           Users    @relation(fields: [userId], references: [userId])
  userId         String   @unique
  fName          String?
  lName          String?
  userName       String   @unique
  password       String
  fatherName     String?
  joiningDate    BigInt?
  isLoggedIn     Boolean? @default(false)
  isCheckedIn    Boolean? @default(false)
  roleId         String?
  emailOffice    String?
  address        String?
  phone          Int?
  updatedAt      BigInt?
  createdAt      BigInt?
  isDeleted      Boolean? @default(false)
  attendenceDate BigInt?
  checkInTime    BigInt?
  checkOutTime   BigInt?
  profileImage   String?
  designation    String?
}

model Reports {
  reportId    String  @id
  reportDate  BigInt
  description String  @db.VarChar(500)
  user        Users   @relation(fields: [userId], references: [userId])
  userId      String
  updatedAt   BigInt
  createdAt   BigInt
  isDeleted   Boolean @default(false)
}

model Tasks {
  taskId    String       @id
  title     String       @unique
  updatedAt BigInt
  createdAt BigInt
  isDeleted Boolean      @default(false)
  tasks     TaskTracks[]
  subTasks  SubTasks[]
}

model TaskTracks {
  taskTrackId String  @id
  startDate   BigInt
  endDate     BigInt?
  duration    BigInt?
  isActive    Boolean @default(false)
  user        Users   @relation(fields: [userId], references: [userId])
  userId      String
  task        Tasks   @relation(fields: [taskId], references: [taskId])
  taskId      String
  updatedAt   BigInt
  createdAt   BigInt
  isDeleted   Boolean @default(false)
}

model SubTasks {
  subTaskId String  @id
  title     String  @unique
  updatedAt BigInt
  createdAt BigInt
  isDeleted Boolean @default(false)
  task      Tasks   @relation(fields: [taskId], references: [taskId])
  taskId    String
}
